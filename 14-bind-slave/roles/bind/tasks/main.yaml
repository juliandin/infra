- name: Installing bind9
  apt: 
    name: 
      - bind9
      - python3-dnspython

- name: Ensure that bind9 is running and starts on boot
  service:
    name: bind9
    enabled: yes
    state: started

- name: Bind options config
  template:
    src: named.conf.options.j2
    dest: /etc/bind/named.conf.options
  notify: restart bind

- name: Bind local config
  template:
    src: named.conf.local
    dest: /etc/bind/named.conf.local
  notify: restart bind

- name: Master zone config
  template:
    src: db.something.j2
    dest: /var/lib/bind/db.{{ domain }}
    force: no
  notify: 
    - restart bind
    - rndc reload
  when: inventory_hostname in groups['dns_masters']

- name: Bind servisized
  service:
    name: bind9
    state: started
    enabled: yes

- meta: flush_handlers

- name: Add DNS records
  nsupdate:
    key_name: "dns-update"
    key_secret: "{{ ns_update_key }}"
    key_algorithm: "hmac-sha256"
    server: "{{ hostvars[groups['dns_masters'][0]]['ansible_default_ipv4']['address'] }}"
    zone: "{{ domain }}"
    record: "{{ item.rec }}"
    value: "{{ item.val }}"
  loop:
    - { rec: 'prometheus', val: "{{ hostvars[groups['prometheus_server'][0]]['ansible_default_ipv4']['address'] }}" }
    - { rec: 'grafana', val: "{{ hostvars[groups['grafana'][0]]['ansible_default_ipv4']['address'] }}" }
    - { rec: 'influxdb', val: "{{ hostvars[groups['influxdb'][0]]['ansible_default_ipv4']['address'] }}" }
    - { rec: 'pinger', val: "{{ hostvars[groups['pinger'][0]]['ansible_default_ipv4']['address'] }}" }
    - { rec: 'www', val: "{{ hostvars[groups['web_servers'][0]]['ansible_default_ipv4']['address'] }}" }
    - { rec: 'web1', val: "{{ hostvars[groups['web_servers'][0]]['ansible_default_ipv4']['address'] }}" }
    - { rec: 'web2', val: "{{ hostvars[groups['web_servers'][1]]['ansible_default_ipv4']['address'] }}" }
    - { rec: 'db', val: "{{ hostvars[groups['mysql_servers'][0]]['ansible_default_ipv4']['address'] }}" }
    - { rec: 'mysql-repl', val: "{{ hostvars[groups['mysql_servers'][1]]['ansible_default_ipv4']['address'] }}" }
    - { rec: 'ns', val: "{{ hostvars[groups['dns_masters'][0]]['ansible_default_ipv4']['address'] }}" }
    - { rec: 'bind-slave', val: "{{ hostvars[groups['dns_slaves'][0]]['ansible_default_ipv4']['address'] }}" }
  when: inventory_hostname == groups['dns_masters'][0]